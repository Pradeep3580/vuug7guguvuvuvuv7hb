{"entries":[{"timestamp":1727357288019,"editorVersion":"7.0.42","changes":[{"type":"edited","filename":"main.blocks","patch":[{"diffs":[[0,"http"],[-1,"s"],[0,"://"],[-1,"developers.google.com/blockly/xml\"><variables></variables><block type=\"pxt-on-start\" id=\"47@32bWvz8H^g[c._e-o\" x=\"20\" y=\"20"],[1,"www.w3.org/1999/xhtml\">\n  <block type=\"pxt-on-start"],[0,"\"></"]],"start1":12,"start2":12,"length1":135,"length2":62},{"diffs":[[0,"</block>"],[1,"\n  "],[0,"<block t"]],"start1":72,"start2":72,"length1":16,"length2":19},{"diffs":[[0,"ver\""],[-1," id=\"NVwT*+vz~gmV=@.Sm~O^\" x=\"225\" y=\"20\""],[0,"></b"]],"start1":107,"start2":107,"length1":49,"length2":8},{"diffs":[[0,"</block>"],[1,"\n"],[0,"</xml>"]],"start1":112,"start2":112,"length1":14,"length2":15}]},{"type":"edited","filename":"main.ts","patch":[{"diffs":[[-1,"let endtime = 0\nlet starttime = 0\nlet timing = false\nlet totaltime = 0\nlet cost = 0\nconst COSTPERKWH = 0.18\nconst WATTS = 1000\nconst LIGHT_THRESHOLD = 114\nconst HYSTERESIS = 8\nconst LIGHT = LIGHT_THRESHOLD + HYSTERESIS / 2\nconst DARK = LIGHT_THRESHOLD - HYSTERESIS\nlet reading = 0\nlet displaying = false\n\n// Function to calculate energy cost\nfunction calccost(minutes: number): number {\n    let kw = WATTS / 1000\n        let hours = minutes / 60\n            let kwh = kw * hours\n                cost = kwh * COSTPERKWH\n                    return cost\n                    }\n\n                    // Display energy cost when button B is pressed\n                    input.onButtonPressed(Button.B, function () {\n                        displaying = false\n                            let minutes = totaltime / 60000 // Convert total time to minutes\n                                if (timing) { // If currently timing, add current time to total\n                                        minutes += (input.runningTime() - starttime) / 60000\n                                            }\n                                                basic.clearScreen()\n                                                    basic.showNumber(calccost(minutes)) // Show calculated cost\n                                                        basic.pause(500)\n                                                            displaying = true\n                                                            })\n\n                                                            // Alarm function for tilt sensor\n                                                            function alarm() {\n                                                                basic.showIcon(IconNames.Angry)\n                                                                    music.playMelody(\"B A G A B A G A \", 120) // Simple melody for alarm\n                                                                    }\n\n                                                                    // Radio received string for plant tilt alarm\n                                                                    radio.onReceivedString(function (receivedString) {\n                                                                        alarm()\n                                                                        })\n\n                                                                        // Tilt sensor for plant alarm\n                                                                        input.onGesture(Gesture.Shake, function () {\n                                                                            radio.sendString(\"thief!\")\n                                                                                alarm()\n                                                                                })\n\n                                                                                radio.setGroup(1)\n\n                                                                                // Light level monitoring for energy timer\n                                                                                basic.forever(function () {\n                                                                                    reading = input.lightLevel()\n                                                                                        if (reading < DARK) {\n                                                                                                if (timing) {\n                                                                                                            endtime = input.runningTime()\n                                                                                                                        totaltime += endtime - starttime\n                                                                                                                                    timing = false\n                                                                                                                                            }\n                                                                                                                                                } else if (reading >= LIGHT) {\n                                                                                                                                                        if (!timing) {\n                                                                                                                                                                    starttime = input.runningTime()\n                                                                                                                                                                                timing = true\n                                                                                                                                                                                        }\n                                                                                                                                                                                            }\n                                                                                                                                                                                                basic.pause(100) // Short pause to avoid rapid looping\n                                                                                                                                                                                                })\n\n                                                                                                                                                                                                // Display light intensity when button A is pressed\n                                                                                                                                                                                                input.onButtonPressed(Button.A, function () {\n                                                                                                                                                                                                    reading = input.lightLevel()\n                                                                                                                                                                                                        basic.showNumber(reading) // Show current light intensity\n                                                                                                                                                                                                            basic.pause(500)\n                                                                                                                                                                                                            })\n\n                                                                                                                                                                                                            // Night light functionality based on ambient light level\n                                                                                                                                                                                                            basic.forever(function () {\n                                                                                                                                                                                                                if (input.lightLevel() < 100) { // Threshold for night light\n                                                                                                                                                                                                                        basic.showLeds(`\n                                                                                                                                                                                                                                    # # # # #\n                                                                                                                                                                                                                                                # # # # #\n                                                                                                                                                                                                                                                            # # # # #\n                                                                                                                                                                                                                                                                        # # # # #\n                                                                                                                                                                                                                                                                                    # # # # #\n                                                                                                                                                                                                                                                                                            `)\n                                                                                                                                                                                                                                                                                                } else {\n                                                                                                                                                                                                                                                                                                        basic.clearScreen()\n                                                                                                                                                                                                                                                                                                            }\n                                                                                                                                                                                                                                                                                                            })\n                                                                                                                                                                                                                                                                                                            "],[0,"\n"]],"start1":0,"start2":0,"length1":11131,"length2":1}]},{"type":"edited","filename":"pxt.json","patch":[{"diffs":[[0,"   \""],[-1,"testFiles\": [\n        \"test.ts\"\n    ],\n    \"preferredEditor\": \"tsprj\""],[1,"additionalFilePaths\": []"],[0,"\n}\n"]],"start1":243,"start2":243,"length1":76,"length2":31}]},{"type":"added","filename":"test.ts","value":"// tests go here; this will not be compiled when this package is used as an extension.\n"}]}],"snapshots":[{"timestamp":1727357288018,"editorVersion":"7.0.42","text":{"main.blocks":"<xml xmlns=\"http://www.w3.org/1999/xhtml\">\n  <block type=\"pxt-on-start\"></block>\n  <block type=\"device_forever\"></block>\n</xml>","main.ts":"\n","README.md":"","pxt.json":"{\n    \"name\": \"vuug7guguvuvuvuv7hb\",\n    \"description\": \"\",\n    \"dependencies\": {\n        \"core\": \"*\",\n        \"radio\": \"*\",\n        \"microphone\": \"*\"\n    },\n    \"files\": [\n        \"main.blocks\",\n        \"main.ts\",\n        \"README.md\"\n    ],\n    \"additionalFilePaths\": []\n}\n"}}],"shares":[],"lastSaveTime":1727357322314}